declare module 'acorn' {
	declare export type AcornNode = {
		type: string,
		start: number,
		end: number,
		name: string,
		value: string,
		callee: AcornNode,
		source: AcornNode,
		arguments: AcornNode[],
	};

	declare type AcornConfig = {
		ecmaVersion: number,
		sourceType: 'script' | 'module',
		plugins: {
			[key: string]: boolean,
		},
	};

	declare class Acorn {
		parse: (code: string, config?: AcornConfig) => AcornNode;
	}

	declare export default typeof Acorn;
}

declare module 'acorn/dist/walk' {
	import type { AcornNode } from 'acorn';

	declare function simple(
		node: AcornNode,
		visitors: { [key: string]: (node: AcornNode) => void },
		base: {}
	): void;

	declare class base {}
}
